// Mocks generated by Mockito 5.4.5 from annotations
// in app_desafio_v2/test/features/character/viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:app_desafio_v2/features/shared/model/database/favourites_database.dart'
    as _i2;
import 'package:app_desafio_v2/features/shared/model/entities/entities.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FavouritesDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavouritesDatabase extends _i1.Mock
    implements _i2.FavouritesDatabase {
  MockFavouritesDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> insertCharacter(_i4.Character? character) =>
      (super.noSuchMethod(
            Invocation.method(#insertCharacter, [character]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.Character>> getAllCharacters() =>
      (super.noSuchMethod(
            Invocation.method(#getAllCharacters, []),
            returnValue: _i3.Future<List<_i4.Character>>.value(
              <_i4.Character>[],
            ),
          )
          as _i3.Future<List<_i4.Character>>);

  @override
  _i3.Future<void> deleteCharacter(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCharacter, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
